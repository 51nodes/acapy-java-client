/*
 * Copyright (c) 2020-2021 - for information on the respective copyright owner
 * see the NOTICE file and/or the repository at
 * https://github.com/hyperledger-labs/acapy-java-client
 *
 * SPDX-License-Identifier: Apache-2.0
 */
/*
 * aca-py client
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0.7.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.hyperledger.aries.api.issue_credential_v2;


import org.hyperledger.acy_py.generated.model.*;
import org.hyperledger.aries.api.issue_credential_v1.*;

/**
 * V20CredExRecord
 */
@SuppressWarnings("unused")
@lombok.Data
@lombok.AllArgsConstructor
@lombok.NoArgsConstructor
@lombok.Builder
public class V20CredExRecord implements CredExStateTranslator {
    private Boolean autoIssue;
    private Boolean autoOffer;
    private Boolean autoRemove;
    private Boolean trace;

    private V20CredExRecordByFormat byFormat;

    private V20CredOffer credOffer;
    private V20CredPreview credPreview;
    private V20CredProposal credProposal;
    private V20CredIssue credIssue;
    private V20CredRequest credRequest;

    private String connectionId;
    private String createdAt;
    private String credExId;
    private String errorMsg;
    private String threadId;
    private String parentThreadId;
    private String updatedAt;

    private CredentialExchangeInitiator initiator;
    private CredentialExchangeRole role;
    private CredentialExchangeState state;

    public boolean autoIssueEnabled() {
        return autoIssue != null && autoIssue;
    }

    public boolean autoOfferEnabled() {
        return autoOffer != null && autoOffer;
    }

    public boolean autoRemoveEnabled() {
        return autoRemove != null && autoRemove;
    }


    /** Convert V2 Credential exchange record in state proposal-received to a V1 record */
    // TODO json-ld
    public V1CredentialExchange toV1CredentialExchangeFromProposal() {
        return V1CredentialExchange
                .builder()
                .autoIssue(autoIssue)
                .autoOffer(autoOffer)
                .autoRemove(autoRemove)
                .trace(trace)

                .connectionId(connectionId)
                .createdAt(createdAt)
                .credentialExchangeId(credExId)
                .errorMsg(errorMsg)
                .threadId(threadId)
                .parentThreadId(parentThreadId)
                .updatedAt(updatedAt)
                .initiator(initiator)

                .schemaId(byFormat != null ? byFormat.findSchemaIdInIndyProposal() : null)
                .credentialProposalDict(V1CredentialExchange.CredentialProposalDict
                        .builder()
                        .schemaId(byFormat != null ? byFormat.findSchemaIdInIndyProposal() : null)
                        .credentialProposal(V1CredentialExchange.CredentialProposalDict.CredentialProposal
                                .builder()
                                .attributes(getCredProposal().getCredentialPreview() != null ? getCredProposal().getCredentialPreview().getAttributes() : null)
                                .build())
                        .build())

                .role(role)
                .state(state)
                .build();
    }
}
